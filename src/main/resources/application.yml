spring:
  application:
    name: SpringBootDoem
  #freemarker配置
  freemarker:
    cache: false
    charset: UTF-8
    check-template-location: true
    content-type: text/html
    expose-request-attributes: true
    expose-session-attributes: true
    request-context-attribute: request
    template-loader-path: classpath:/templates
#druid数据源相关配置配置
  datasource:
      test1:
        url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;tinyInt1isBit=false
        username: root
        password: 123456
        driverClassName: com.mysql.jdbc.Driver
        type: org.apache.tomcat.jdbc.pool.DataSource
      test2:
        url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;tinyInt1isBit=false
        username: root
        password: 123456
        driverClassName: com.mysql.jdbc.Driver
        type: org.apache.tomcat.jdbc.pool.DataSource
#      url: jdbc:mysql://127.0.0.1:3306/test?useUnicode=true&amp;characterEncoding=UTF-8&amp;tinyInt1isBit=false
#      username: root
#      password: 123456
#      driver-class-name: com.mysql.jdbc.Driver
#      type: org.apache.tomcat.jdbc.pool.DataSource

#    #连接池的配置信息
#    # 初始化大小，最小，最大
#    initialSize: 5
#    minIdle: 5
#    #最大连接数量
#    maxActive: 20
#    maxWait: 60000
#    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#    timeBetweenEvictionRunsMillis: 60000
#    # 配置一个连接在池中最小生存的时间，单位是毫秒
#    minEvictableIdleTimeMillis: 300000
#    #验证查询语句
#    validationQuery: SELECT 1 FROM DUAL
#    #空闲时测试
#    testWhileIdle: true
#    #调用前测试（正式系统影响性能）
#    testOnBorrow: false
#    #调用后测试（正式系统影响性能）
#    testOnReturn: false
#    # 打开PSCache，并且指定每个连接上PSCache的大小
#    poolPreparedStatements: true
#    maxPoolPreparedStatementPerConnectionSize: 20
#    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#    filters: stat,wall,log4j
#    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#    # 合并多个DruidDataSource的监控数据
#    #spring.datasource.useGlobalDataSourceStat=true
  #redis配置数据
  redis:
    hostName: 192.168.5.250
    port: 6379
    # use dbIndex  默认 0
    database: 2
    password:
    pool:
      maxActive: 8
      maxWait: -1
      maxIdle: 100
      minIdle: 0
    timeout: 5000
  activiti:
    #默认，JobExecutor在流程引擎启动时就会激活。 如果不想在流程引擎启动后自动激活JobExecutor，可以设置
    job-executor-activate: false
#    Ø  none: 不保存任何历史记录，可以提高系统性能；
#    Ø  activity：保存所有的流程实例、任务、活动信息；
#    Ø  audit：也是Activiti的默认级别，保存所有的流程实例、任务、活动、表单属性；
#    Ø  full：最完整的历史记录，除了包含audit级别的信息之外还能保存详细，例如：流程变量。
    history-level: audit
    # 自动部署验证设置:true-开启（默认）、false-关闭
    check-process-definitions: false
    # asyncExecutorActivate是指activiti在流程引擎启动就激活AsyncExecutor,异步：true-开启（默认）、false-关闭
    async-executor-activate: false
    # asyncExecutorEnabled属性设置设置true后将代替那些老的Job executor
    async-executor-enabled: false

    #  安全访问
#security:
#   basic:
#      enabled: false

#mybatis 配置信息
mybatis:
  #对应我们的实体类所在的包
  type-aliases-package: demo.model
  mapperLocations: classpath:/mappers/**/*.xml

#  除了上面常见的两项配置，还有：
#  mybatis.config：mybatis-config.xml配置文件的路径
#  mybatis.typeHandlersPackage：扫描typeHandlers的包
#  mybatis.checkConfigLocation：检查配置文件是否存在
#  mybatis.executorType：设置执行模式（SIMPLE, REUSE, BATCH），默认为SIMPLE
server:
  port: 8787
logging:
    config: log/logback.xml # 日志配置文件,Spring Boot默认使用classpath路径下的日志配置文件,如:logback.xml
    level:
      ROOT: INFO
      demo: DEBUG  # 要打印的log目录
      org.mongodb.driver: INFO
security:
  basic:
    enabled: false


